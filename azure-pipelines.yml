# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  dotnetSdkVersion: '3.x'

stages:
- stage: 'CI'
  displayName: 'CI'
  jobs:
  - job: 'Buid'
    displayName: 'Build'

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: $(dotnetSdkVersion)
      displayName: Use .Net Core $(dotnetSdkVersion) version

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        # feedsToUse: 'select'
      displayName: dotnet restore

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
      displayName: dotnet build

    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*.csproj'
      displayName: dotnet test

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      displayName: dotnet publish

    - bash: |
        echo $(Build.ArtifactStagingDirectory)
        ls -lha $(Build.ArtifactStagingDirectory)
      displayName: Check artifacts

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(Build.BuildId)'
        publishLocation: 'Container'
      displayName: Publish build artifacts

- stage: 'dev'
  displayName: 'Deploy to the dev environment'
  dependsOn: CI
  jobs:
  - deployment: Deploy
    environment: dev
    strategy: 
      runOnce:
        deploy:
          steps:
          # - task: DownloadBuildArtifacts@1
          #   inputs:
          #     buildType: 'current'
          #     downloadType: 'single'
          #     artifactName: '$(Build.BuildId)'
          #     downloadPath: '$(System.ArtifactsDirectory)'
          #   displayName: 'My arficat download'
              
          # - task: AzureRmWebAppDeployment@4
          #   inputs:
          #     ConnectionType: 'AzureRM'
          #     azureSubscription: 'MyPersonalSubscription(e2e5a629-438e-4565-b775-4274c097d5f5)'
          #     appType: 'webAppLinux'
          #     WebAppName: 'roddemo'
          #     packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
          #     RuntimeStack: 'DOTNETCORE|3.1'
          #     StartupCommand: 'dotnet dotnetweb.dll'
          #     AppSettings: '-Port 5000'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'MyPersonalSubscription(e2e5a629-438e-4565-b775-4274c097d5f5)'
              appType: 'webAppLinux'
              appName: 'roddemo'
              # package: '$(System.DefaultWorkingDirectory)/**/*.zip'
              package: '$(Pipeline.Workspace)/**/*.zip'
              runtimeStack: 'DOTNETCORE|3.1'
              startUpCommand: 'docker dotnetweb.dll'
              # appSettings: '-Port 5000'